pipeline {
    agent any

    triggers {
        pollSCM('* * * * *')
    }

    environment {
        APP_DIR = '/opt/flask-app'
        SERVICE_NAME = 'flask-app'
        APP_PORT = '6060'
    }

    stages {
        stage('Prepare Workspace') {
            steps {
                dir('project/jenkins') {
                    script {
                        echo "Working in: ${pwd()}"
                    }
                }
            }
        }

        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [[$class: 'CleanBeforeCheckout']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/nuclear77/theGP.git'
                    ]]
                ])
            }
        }

        stage('Deploy with Ansible') {
            steps {
                sh """
                ansible-playbook ansible/playbook.yml \
                    -i "localhost," \
                    --connection=local \
                    -e "app_port=${APP_PORT}"
                """
            }
        }

        stage('Restart Service') {
            steps {
                sh "sudo systemctl daemon-reload"
                sh "sudo systemctl restart ${SERVICE_NAME}"
                sh "sudo systemctl status ${SERVICE_NAME} --no-pager"
            }
        }

        stage('Verify Deployment') {
            steps {
                sh "curl --retry 3 --retry-delay 5 http://localhost:${APP_PORT}/health"
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            echo "✅ Приложение успешно запущено на порту ${APP_PORT}"
        }
        failure {
            echo "❌ Ошибка развертывания на порту ${APP_PORT}"
        }
    }
}