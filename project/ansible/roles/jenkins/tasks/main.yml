---
- name: Install required system packages
  apt:
    name:
      - curl
      - gnupg
      - software-properties-common
      - git
      - python3-pip
      - python3-venv
    state: present

- name: Add Jenkins repository key
  apt_key:
    url: "https://pkg.jenkins.io/debian-stable/jenkins.io.key"
    state: present

- name: Add Jenkins repository
  apt_repository:
    repo: "deb https://pkg.jenkins.io/debian-stable binary/"
    state: present
    filename: "jenkins"

- name: Install Jenkins
  apt:
    name: jenkins
    state: present
    update_cache: yes

- name: Disable setup wizard and security
  block:
    - name: Set Java arguments to disable setup
      lineinfile:
        path: /etc/default/jenkins
        regexp: "^JAVA_ARGS="
        line: 'JAVA_ARGS="-Djenkins.install.runSetupWizard=false -Djenkins.model.Jenkins.installState=INITIAL_SETUP_COMPLETED"'
        state: present

    - name: Create minimal config.xml
      copy:
        dest: /var/lib/jenkins/config.xml
        content: |
          <?xml version='1.1' encoding='UTF-8'?>
          <hudson>
            <disabledAdministrativeMonitors/>
            <version>2.414.1</version>
            <installStateName>RUNNING</installStateName>
            <numExecutors>2</numExecutors>
            <mode>NORMAL</mode>
            <useSecurity>false</useSecurity>
          </hudson>
        owner: jenkins
        group: jenkins
        mode: '0644'
  notify: restart jenkins

- name: Start Jenkins service
  systemd:
    name: jenkins
    state: started
    enabled: yes

- name: Wait for Jenkins to start
  wait_for:
    port: 8080
    delay: 10
    timeout: 300

- name: Create plugins directory
  file:
    path: /var/lib/jenkins/plugins
    state: directory
    owner: jenkins
    group: jenkins
    mode: '0755'

- name: Pre-download required plugins
  get_url:
    url: "https://updates.jenkins.io/download/plugins/{{ item }}/latest/{{ item }}.hpi"
    dest: "/var/lib/jenkins/plugins/{{ item }}.hpi"
    owner: jenkins
    group: jenkins
    mode: '0644'
  loop:
    - configuration-as-code
    - git
    - workflow-aggregator
    - job-dsl
    - pipeline-utility-steps
    - ansible

- name: Wait for plugins to load
  wait_for:
    path: /var/lib/jenkins/plugins/{{ item }}.jpi
    timeout: 50
  loop:
    - configuration-as-code
    - git
    - workflow-aggregator
    - job-dsl
    - pipeline-utility-steps
    - ansible

- name: Create JCasC configuration directory
  file:
    path: /var/lib/jenkins/casc_configs
    state: directory
    owner: jenkins
    group: jenkins
    mode: '0755'

- name: Generate JCasC configuration
  template:
    src: jenkins.yaml.j2
    dest: /var/lib/jenkins/casc_configs/jenkins.yaml
    owner: jenkins
    group: jenkins
    mode: '0644'

- name: Set JCasC environment variable
  lineinfile:
    path: /etc/default/jenkins
    regexp: "^CASC_JENKINS_CONFIG="
    line: 'CASC_JENKINS_CONFIG=/var/lib/jenkins/casc_configs'
    state: present
  notify: safe reload jenkins

- name: Apply security configuration
  systemd:
    name: jenkins
    state: restarted

- name: Final wait for Jenkins
  wait_for:
    port: 8080
    delay: 20
    timeout: 300

- name: Create app directory
  file:
    path: /opt/flask-app
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create virtual environment
  shell: |
    python3 -m venv /opt/flask-app/venv
  args:
    executable: /bin/bash

- name: Install Python requirements
  pip:
    requirements: /opt/flask-app/app/requirements.txt
    virtualenv: /opt/flask-app/venv
    virtualenv_python: python3